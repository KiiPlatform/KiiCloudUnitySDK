// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.Threading;

namespace KiiCorp.Cloud.Storage
{
    public class CountDownLatch
    {
        private int m_remain;
        private EventWaitHandle m_event;
        
        public CountDownLatch(int count)
        {
            m_remain = count;
            m_event = new ManualResetEvent(false);
        }
        
        public void Signal() 
        {
            // The last thread to signal also sets the event.
            if (Interlocked.Decrement(ref m_remain) == 0)
                m_event.Set();
        }
        
        public bool Wait() 
        {
            return m_event.WaitOne();
        }

        public bool Wait(TimeSpan time)
        {
            return m_event.WaitOne(time);
        }
    }
}

